[pytest]
# Test file patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery
testpaths = tests
norecursedirs = .git .tox .env venv env

# Output and reporting
addopts = 
    --verbose
    --showlocals
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --cov-config=.coveragerc
    --junit-xml=test-results.xml
    -p no:warnings

# Environment variables for testing
env =
    FLASK_ENV=testing
    FLASK_DEBUG=true
    TESTING=true

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    api: API tests
    slow: Tests that take longer to run
    flaky: Tests that are unstable
    security: Security-related tests

# Configure logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test duration warnings
junit_duration_report = call

# Fail on specific warnings
filterwarnings =
    error::DeprecationWarning
    error::PendingDeprecationWarning
    ignore::UserWarning
    ignore::ImportWarning

# Disable cacheprovider
cache_dir = /tmp/pytest_cache

# Configure test timeouts
timeout = 300

# Configure parallel execution
addopts = -n auto

# Configure hypothesis settings
hypothesis_profile = ci

# Configure coverage settings
[coverage:run]
branch = True
source = .
omit =
    tests/*
    setup.py
    venv/*
    env/*
    .env/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    DEBUG
    if debug:

# Configure test database
[test_database]
uri = sqlite:///test.db
echo = false

# Configure test cache
[test_cache]
type = simple
default_timeout = 300

# Configure test email
[test_email]
smtp_server = localhost
smtp_port = 1025
sender = test@example.com
recipients = test@example.com

# Configure test storage
[test_storage]
path = tests/test_files
max_size = 1048576  # 1MB

# Configure test API
[test_api]
base_url = http://localhost:5000
timeout = 30
max_retries = 3

# Configure test monitoring
[test_monitoring]
enabled = true
port = 9090
interval = 5

# Configure test security
[test_security]
jwt_secret = test_secret
token_expiry = 3600
